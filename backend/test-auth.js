const mongoose = require('mongoose');const bcrypt = require('bcryptjs');require('dotenv').config();async function connectDB() {  try {    const conn = await mongoose.connect(process.env.MONGODB_URI);    console.log(`MongoDB Connected: ${conn.connection.host}`);    return conn;  } catch (error) {    console.error(`Error connecting to MongoDB: ${error.message}`);    process.exit(1);  }}const User = require('./src/models/userModel');async function createTestUser() {  try {    const existingUser = await User.findOne({ email: 'test@example.com' });    if (existingUser) {      console.log('Test user already exists:', existingUser.email);      return existingUser;    }    const user = await User.create({      name: 'Test User',      email: 'test@example.com',      password: 'password123',     });    console.log('Test user created:', user.email);    return user;  } catch (error) {    console.error('Error creating test user:', error.message);    throw error;  }}async function testLogin(email, password) {  try {    const user = await User.findOne({ email }).select('+password');    if (!user) {      console.log('User not found');      return null;    }    const isMatch = await bcrypt.compare(password, user.password);    if (isMatch) {      console.log('Login successful!');      return {        _id: user._id,        name: user.name,        email: user.email,      };    } else {      console.log('Password does not match');      return null;    }  } catch (error) {    console.error('Login error:', error.message);    throw error;  }}async function main() {  try {    await connectDB();    const user = await createTestUser();    console.log('\nTesting login with correct credentials:');    await testLogin('test@example.com', 'password123');    console.log('\nTesting login with incorrect password:');    await testLogin('test@example.com', 'wrongpassword');    console.log('\nTesting login with non-existent user:');    await testLogin('nonexistent@example.com', 'password123');    console.log('\nListing all users:');    const users = await User.find({}).select('name email');    users.forEach(user => {      console.log(`- ${user.name} (${user.email})`);    });    console.log('\nTests completed');  } catch (error) {    console.error('Test failed:', error);  } finally {    await mongoose.connection.close();    console.log('MongoDB connection closed');  }}main();